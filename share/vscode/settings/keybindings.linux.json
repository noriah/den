// Override key bindings by placing them into your key bindings file.
[
  // addedkey
  {
    "key": "ctrl+alt+left",
    "command": "cursorWordPartLeft",
    "when": "editorFocus"
  },
  // addedkey
  {
    "key": "shift+ctrl+alt+left",
    "command": "cursorWordPartLeftSelect",
    "when": "editorFocus"
  },
  // addedkey
  {
    "key": "ctrl+alt+right",
    "command": "cursorWordPartRight",
    "when": "editorFocus"
  },
  // addedkey
  {
    "key": "shift+ctrl+alt+right",
    "command": "cursorWordPartRightSelect",
    "when": "editorFocus"
  },
  // removedkeys
  {
    "key": "ctrl+end",
    "command": "-cursorBottom",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "meta+down",
    "command": "cursorBottom",
    "when": "textInputFocus"
  },
  // removedkey
  {
    "key": "ctrl+shift+down",
    "command": "-cursorBottomSelect",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "shift+meta+down",
    "command": "cursorBottomSelect",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "shift+alt+meta+down",
    "command": "cursorColumnSelectDown",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "shift+alt+meta+left",
    "command": "cursorColumnSelectLeft",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "shift+alt+meta+pagedown",
    "command": "cursorColumnSelectPageDown",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "shift+alt+meta+pageup",
    "command": "cursorColumnSelectPageUp",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "shift+alt+meta+right",
    "command": "cursorColumnSelectRight",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "shift+alt+meta+up",
    "command": "cursorColumnSelectUp",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "meta+right",
    "command": "cursorEnd",
    "when": "textInputFocus",
    "args": {
      "sticky": false
    }
  },
  // addedkey
  {
    "key": "shift+meta+right",
    "command": "cursorEndSelect",
    "when": "textInputFocus",
    "args": {
      "sticky": false
    }
  },
  // addedkey
  {
    "key": "meta+left",
    "command": "cursorHome",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "shift+meta+left",
    "command": "cursorHomeSelect",
    "when": "textInputFocus"
  },
  // addedkey shortkey
  {
    "key": "ctrl+b",
    "command": "cursorLeft",
    "when": "textInputFocus"
  },
  // addedkey shortkey
  {
    "key": "ctrl+e",
    "command": "cursorLineEnd",
    "when": "textInputFocus"
  },
  // addedkey shortkey
  {
    "key": "ctrl+shift+e",
    "command": "cursorLineEndSelect",
    "when": "textInputFocus"
  },
  // removedkey
  {
    "key": "ctrl+home",
    "command": "-cursorTop",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "meta+up",
    "command": "cursorTop",
    "when": "textInputFocus"
  },
  // removedkey
  {
    "key": "ctrl+shift+home",
    "command": "-cursorTopSelect",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "shift+meta+up",
    "command": "cursorTopSelect",
    "when": "textInputFocus"
  },
  // addedkey shortkey
  {
    "key": "ctrl+h",
    "command": "deleteLeft",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "ctrl+delete",
    "command": "deleteRight",
    "when": "textInputFocus"
  },
  // removedkey
  {
    "key": "ctrl+y",
    "command": "-redo"
  },
  // removedkey
  {
    "key": "ctrl+down",
    "command": "-scrollLineDown",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "ctrl+down",
    "command": "cursorMove",
    "args": {
      "to": "down",
      "by": "line",
      "value": 5
    },
    "when": "editorTextFocus"
  },
  // addedkey
  {
    "key": "ctrl+shift+down",
    "command": "cursorMove",
    "args": {
      "to": "down",
      "by": "line",
      "value": 5,
      "select": true
    },
    "when": "editorTextFocus"
  },
  // addedkey
  {
    "key": "ctrl+pagedown",
    "command": "scrollLineDown",
    "when": "textInputFocus"
  },
  // removedkey
  {
    "key": "ctrl+up",
    "command": "-scrollLineUp",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "ctrl+up",
    "command": "cursorMove",
    "args": {
      "to": "up",
      "by": "line",
      "value": 5
    },
    "when": "editorTextFocus"
  },
  // addedkey
  {
    "key": "ctrl+shift+up",
    "command": "cursorMove",
    "args": {
      "to": "up",
      "by": "line",
      "value": 5,
      "select": true
    },
    "when": "editorTextFocus"
  },
  // addedkey
  {
    "key": "ctrl+pageup",
    "command": "scrollLineUp",
    "when": "textInputFocus"
  },
  // removedkey
  {
    "key": "alt+pagedown",
    "command": "-scrollPageDown",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "meta+pagedown",
    "command": "scrollPageDown",
    "when": "textInputFocus"
  },
  // removedkey
  {
    "key": "alt+pageup",
    "command": "-scrollPageUp",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "meta+pageup",
    "command": "scrollPageUp",
    "when": "textInputFocus"
  },
  // removedkey
  {
    "key": "meta+enter",
    "command": "-notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && notebookCellType == 'markup'"
  },
  // addedkey
  {
    "key": "ctrl+enter",
    "command": "notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && notebookCellType == 'markup'"
  },
  // addedkey
  {
    "key": "meta+e",
    "command": "actions.findWithSelection"
  },
  // addedkey
  {
    "key": "alt+right",
    "command": "cursorWordEndRight",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "shift+alt+right",
    "command": "cursorWordEndRightSelect",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "alt+left",
    "command": "cursorWordLeft",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "shift+alt+left",
    "command": "cursorWordLeftSelect",
    "when": "textInputFocus"
  },
  // addedkey
  {
    "key": "meta+backspace",
    "command": "deleteAllLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  // removedkey
  {
    "key": "ctrl+delete",
    "command": "-deleteWordRight",
    "when": "textInputFocus && !editorReadonly"
  },
  // addedkey
  {
    "key": "alt+delete",
    "command": "deleteWordRight",
    "when": "textInputFocus && !editorReadonly"
  },
  // addedkey
  {
    "key": "meta+delete",
    "command": "deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  // addedkey
  {
    "key": "ctrl+k",
    "command": "deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  // addedkey
  {
    "key": "alt+backspace",
    "command": "deleteWordLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  // addedkey
  {
    "key": "ctrl+alt+backspace",
    "command": "deleteWordPartLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  // addedkey
  {
    "key": "ctrl+alt+delete",
    "command": "deleteWordPartRight",
    "when": "textInputFocus && !editorReadonly"
  },
  // removedkey
  {
    "key": "shift+alt+.",
    "command": "-editor.action.autoFix",
    "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
  },
  // addedkey
  {
    "key": "alt+meta+.",
    "command": "editor.action.autoFix",
    "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
  },
  // removedkey
  {
    "key": "ctrl+shift+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  // addedkey
  {
    "key": "shift+alt+a",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  // removedkey
  {
    "key": "ctrl+f2",
    "command": "-editor.action.changeAll",
    "when": "editorTextFocus && !editorReadonly"
  },
  // addedkey
  {
    "key": "meta+f2",
    "command": "editor.action.changeAll",
    "when": "editorTextFocus && !editorReadonly"
  },
  // // removedkey
  // {
  //   "key": "ctrl+c",
  //   "command": "-editor.action.clipboardCopyAction"
  // },
  // // addedkey
  // {
  //   "key": "meta+c",
  //   "command": "editor.action.clipboardCopyAction"
  // },
  // removedkey
  // {
  //   "key": "ctrl+x",
  //   "command": "-editor.action.clipboardCutAction"
  // },
  // // addedkey
  // {
  //   "key": "meta+x",
  //   "command": "editor.action.clipboardCutAction"
  // },
  // removedkey
  // {
  //   "key": "ctrl+v",
  //   "command": "-editor.action.clipboardPasteAction"
  // },
  // // addedkey
  // {
  //   "key": "meta+v",
  //   "command": "editor.action.clipboardPasteAction"
  // },
  // removedkey
  {
    "key": "ctrl+shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  // addedkey
  {
    "key": "shift+alt+down",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  // removedkey
  {
    "key": "ctrl+shift+alt+up",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  // addedkey
  {
    "key": "shift+alt+up",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  // removedkey
  {
    "key": "ctrl+shift+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  // addedkey
  {
    "key": "ctrl+shift+k",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  // removedkey
  {
    "key": "ctrl+shift+i",
    "command": "-editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  // addedkey
  {
    "key": "shift+alt+f",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  // removedkey
  {
    "key": "ctrl+shift+i",
    "command": "-editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  // addedkey
  {
    "key": "shift+alt+f",
    "command": "editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  // removedkey
  {
    "key": "ctrl+f12",
    "command": "-editor.action.goToImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  // addedkey
  {
    "key": "meta+f12",
    "command": "editor.action.goToImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  // removedkey
  {
    "key": "ctrl+shift+[IntlBackslash]",
    "command": "-editor.action.inPlaceReplace.down",
    "when": "editorTextFocus && !editorReadonly"
  },
  // removedkey
  {
    "key": "ctrl+shift+.",
    "command": "-editor.action.inPlaceReplace.down",
    "when": "editorTextFocus && !editorReadonly"
  },
  // addedkey
  {
    "key": "shift+meta+.",
    "command": "editor.action.inPlaceReplace.down",
    "when": "editorTextFocus && !editorReadonly"
  },
  // removedkey
  {
    "key": "ctrl+[IntlBackslash]",
    "command": "-editor.action.inPlaceReplace.up",
    "when": "editorTextFocus && !editorReadonly"
  },
  // removedkey
  {
    "key": "ctrl+]",
    "command": "-editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  // addedkey
  {
    "key": "meta+]",
    "command": "editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  // removedkey
  {
    "key": "ctrl+shift+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  // addedkey
  {
    "key": "alt+meta+up",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  // removedkey
  {
    "key": "shift+alt+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  // removedkey
  {
    "key": "ctrl+shift+down",
    "command": "-editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  // addedkey
  {
    "key": "alt+meta+down",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  // removedkey
  {
    "key": "shift+alt+down",
    "command": "-editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  // // removedkey
  // {
  //   "key": "ctrl+enter",
  //   "command": "-editor.action.insertLineAfter",
  //   "when": "editorTextFocus && !editorReadonly"
  // },
  // // addedkey
  // {
  //   "key": "meta+enter",
  //   "command": "editor.action.insertLineAfter",
  //   "when": "editorTextFocus && !editorReadonly"
  // },
  // addedkey
  {
    "key": "ctrl+j",
    "command": "editor.action.joinLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  // removedkey
  {
    "key": "ctrl+shift+f10",
    "command": "-editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  // addedkey
  {
    "key": "alt+f12",
    "command": "editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  // addedkey
  {
    "key": "shift+meta+g",
    "command": "editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  // maybe remove
  // removedkey
  {
    "key": "ctrl+shift+f3",
    "command": "-editor.action.previousSelectionMatchFindAction",
    "when": "editorFocus"
  },
  // addedkey
  // mayberemove
  {
    "key": "shift+meta+f3",
    "command": "editor.action.previousSelectionMatchFindAction",
    "when": "editorFocus"
  },
  // removedkey
  {
    "key": "ctrl+.",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  // addedkey
  {
    "key": "meta+.",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  // removedkey
  {
    "key": "ctrl+shift+l",
    "command": "-editor.action.selectHighlights",
    "when": "editorFocus"
  },
  // addedkey
  {
    "key": "shift+meta+l",
    "command": "editor.action.selectHighlights",
    "when": "editorFocus"
  },
  // removedkey
  {
    "key": "shift+alt+f1",
    "command": "-editor.action.showAccessibilityHelp"
  },
  // removedkey
  {
    "key": "shift+alt+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  // addedkey
  {
    "key": "ctrl+shift+meta+right",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  // removedkey
  {
    "key": "shift+alt+left",
    "command": "-editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  // addedkey
  {
    "key": "ctrl+shift+meta+left",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  // removedkey shortkey
  {
    "key": "ctrl+h",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  // addedkey customkey
  {
    "key": "ctrl+shift+f",
    "command": "editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  // mayberemove
  // removedkey
  {
    "key": "ctrl+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  // addedkey
  {
    "key": "ctrl+shift+m",
    "command": "editor.action.toggleTabFocusMode"
  },
  // addedkey
  {
    "key": "ctrl+t",
    "command": "editor.action.transposeLetters",
    "when": "textInputFocus && !editorReadonly"
  },
  // removedkey
  // {
  //   "key": "ctrl+shift+space",
  //   "command": "-editor.action.triggerParameterHints",
  //   "when": "editorHasSignatureHelpProvider && editorTextFocus"
  // },
  // addedkey
  {
    "key": "shift+meta+space",
    "command": "editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  // removedkey
  {
    "key": "ctrl+i",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  // addedkey
  {
    "key": "meta+i",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  // addedkey
  {
    "key": "alt+escape",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  // removedkey
  {
    "key": "ctrl+shift+[",
    "command": "-editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  // addedkey
  {
    "key": "alt+meta+[",
    "command": "editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  // removedkey
  {
    "key": "ctrl+shift+]",
    "command": "-editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  // addedkey
  {
    "key": "alt+meta+]",
    "command": "editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  // removedkey
  {
    "key": "meta+enter",
    "command": "-interactive.execute",
    "when": "resourceScheme == 'vscode-interactive'"
  },
  // addedkey
  {
    "key": "ctrl+enter",
    "command": "interactive.execute",
    "when": "resourceScheme == 'vscode-interactive'"
  },
  // removedkey
  {
    "key": "meta+enter",
    "command": "-notebook.cell.execute",
    "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
  },
  // addedkey
  {
    "key": "ctrl+enter",
    "command": "notebook.cell.execute",
    "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
  },
  // removedkey
  {
    "key": "ctrl+shift+v",
    "command": "-notebook.cell.pasteAbove",
    "when": "notebookEditorFocused && !inputFocus"
  },
  // addedkey
  {
    "key": "shift+meta+v",
    "command": "notebook.cell.pasteAbove",
    "when": "notebookEditorFocused && !inputFocus"
  },
  // removedkey
  {
    "key": "ctrl+shift+i",
    "command": "notebook.formatCell",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
  },
  // addedkey
  {
    "key": "shift+alt+f",
    "command": "notebook.formatCell",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
  },
  // removedkey
  {
    "key": "ctrl+shift+r",
    "command": "-rerunSearchEditorSearch",
    "when": "inSearchEditor"
  },
  // addedkey
  {
    "key": "shift+meta+r",
    "command": "rerunSearchEditorSearch",
    "when": "inSearchEditor"
  },
  // removedkey
  {
    "key": "ctrl+shift+backspace",
    "command": "-search.searchEditor.action.deleteFileResults",
    "when": "inSearchEditor"
  },
  // addedkey
  {
    "key": "shift+meta+backspace",
    "command": "search.searchEditor.action.deleteFileResults",
    "when": "inSearchEditor"
  },
  // removedkey
  {
    "key": "ctrl+/",
    "command": "-toggleExplainMode",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "meta+/",
    "command": "toggleExplainMode",
    "when": "suggestWidgetVisible"
  },
  // removedkey
  {
    "key": "ctrl+enter",
    "command": "-workbench.action.submitComment",
    "when": "commentEditorFocused"
  },
  // addedkey
  {
    "key": "meta+enter",
    "command": "workbench.action.submitComment",
    "when": "commentEditorFocused"
  },
  // removedkey
  {
    "key": "ctrl+.",
    "command": "-workbench.action.terminal.showQuickFixes",
    "when": "terminalFocus"
  },
  // addedkey
  {
    "key": "meta+.",
    "command": "workbench.action.terminal.showQuickFixes",
    "when": "terminalFocus"
  },
  // removedkey
  {
    "key": "ctrl+alt+enter",
    "command": "-editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible"
  },
  // addedkey
  {
    "key": "alt+meta+enter",
    "command": "editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible"
  },
  // addedkey
  {
    "key": "meta+enter",
    "command": "editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
  },
  // removedkey
  {
    "key": "ctrl+shift+1",
    "command": "-editor.action.replaceOne",
    "when": "editorFocus && findWidgetVisible"
  },
  // addedkey
  {
    "key": "shift+meta+1",
    "command": "editor.action.replaceOne",
    "when": "editorFocus && findWidgetVisible"
  },
  // removedkey
  {
    "key": "alt+c",
    "command": "-toggleFindCaseSensitive",
    "when": "editorFocus"
  },
  // addedkey
  {
    "key": "alt+cmd+c",
    "command": "toggleFindCaseSensitive",
    "when": "editorFocus"
  },
  // removedkey
  {
    "key": "alt+l",
    "command": "-toggleFindInSelection",
    "when": "editorFocus"
  },
  // addedkey
  {
    "key": "alt+cmd+l",
    "command": "toggleFindInSelection",
    "when": "editorFocus"
  },
  // removedkey
  {
    "key": "alt+r",
    "command": "-toggleFindRegex",
    "when": "editorFocus"
  },
  // addedkey
  {
    "key": "alt+cmd+r",
    "command": "toggleFindRegex",
    "when": "editorFocus"
  },
  // removedkey
  {
    "key": "alt+w",
    "command": "-toggleFindWholeWord",
    "when": "editorFocus"
  },
  // addedkey
  {
    "key": "alt+cmd+w",
    "command": "toggleFindWholeWord",
    "when": "editorFocus"
  },
  // removedkey
  {
    "key": "alt+p",
    "command": "-togglePreserveCase",
    "when": "editorFocus"
  },
  // addedkey
  {
    "key": "alt+cmd+p",
    "command": "togglePreserveCase",
    "when": "editorFocus"
  },
  // addedkey
  {
    "key": "ctrl+n",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  // addedkey
  {
    "key": "ctrl+p",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  // removedkey
  {
    "key": "ctrl+i",
    "command": "-focusSuggestion",
    "when": "suggestWidgetVisible && textInputFocus && !config.editor.suggest.selectQuickSuggestions && !suggestWidgetHasFocusedSuggestion"
  },
  // addedkey
  {
    "key": "meta+i",
    "command": "focusSuggestion",
    "when": "suggestWidgetVisible && textInputFocus && !config.editor.suggest.selectQuickSuggestions && !suggestWidgetHasFocusedSuggestion"
  },
  // removedkey
  {
    "key": "ctrl+pagedown",
    "command": "-selectNextPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  // addedkey
  {
    "key": "meta+pagedown",
    "command": "selectNextPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  // addedkey
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  // removedkey
  {
    "key": "ctrl+down",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  // addedkey
  {
    "key": "meta+down",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  // removedkey
  {
    "key": "ctrl+pageup",
    "command": "selectPrevPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  // addedkey
  {
    "key": "meta+pageup",
    "command": "selectPrevPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  // removedkey
  {
    "key": "ctrl+up",
    "command": "-selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  // addedkey
  {
    "key": "meta+up",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  // removedkey
  {
    "key": "ctrl+i",
    "command": "-toggleSuggestionDetails",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  // addedkey
  {
    "key": "meta+i",
    "command": "toggleSuggestionDetails",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  // removedkey
  {
    "key": "ctrl+shift+l",
    "command": "-addCursorsAtSearchResults",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  // addedkey
  {
    "key": "shift+meta+l",
    "command": "addCursorsAtSearchResults",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  // removedkey
  {
    "key": "ctrl+shift+;",
    "command": "-breadcrumbs.focus",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  },
  // addedkey
  {
    "key": "shift+meta+;",
    "command": "breadcrumbs.focus",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  },
  // removedkey
  {
    "key": "ctrl+shift+.",
    "command": "-breadcrumbs.focusAndSelect",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  },
  // addedkey
  {
    "key": "shift+meta+.",
    "command": "breadcrumbs.focusAndSelect",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  },
  // removedkey
  {
    "key": "ctrl+right",
    "command": "-breadcrumbs.focusNext",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  // addedkey
  {
    "key": "alt+right",
    "command": "breadcrumbs.focusNext",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  // removedkey
  {
    "key": "ctrl+left",
    "command": "-breadcrumbs.focusPrevious",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  // addedkey
  {
    "key": "alt+left",
    "command": "breadcrumbs.focusPrevious",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  // removedkey
  {
    "key": "ctrl+enter",
    "command": "-breadcrumbs.revealFocused",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  // addedkey
  {
    "key": "meta+enter",
    "command": "breadcrumbs.revealFocused",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  // removedkey
  {
    "key": "ctrl+enter",
    "command": "-breadcrumbs.revealFocusedFromTreeAside",
    "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
  },
  // addedkey
  {
    "key": "meta+enter",
    "command": "breadcrumbs.revealFocusedFromTreeAside",
    "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
  },
  // removedkey
  {
    "key": "ctrl+shift+.",
    "command": "-breadcrumbs.toggleToOn",
    "when": "!config.breadcrumbs.enabled"
  },
  // addedkey
  {
    "key": "shift+meta+.",
    "command": "breadcrumbs.toggleToOn",
    "when": "!config.breadcrumbs.enabled"
  },
  // removedkey
  {
    "key": "ctrl+down",
    "command": "-commentsFocusViewFromFilter",
    "when": "commentsFilterFocus"
  },
  // addedkey
  {
    "key": "meta+down",
    "command": "commentsFocusViewFromFilter",
    "when": "commentsFilterFocus"
  },
  // removedkey
  {
    "key": "ctrl+alt+c",
    "command": "-copyFilePath",
    "when": "!editorFocus"
  },
  // addedkey
  {
    "key": "alt+meta+c",
    "command": "copyFilePath",
    "when": "!editorFocus"
  },
  // removedkey
  {
    "key": "ctrl+shift+alt+c",
    "command": "-copyRelativeFilePath",
    "when": "!editorFocus"
  },
  // addedkey
  {
    "key": "shift+alt+meta+c",
    "command": "copyRelativeFilePath",
    "when": "!editorFocus"
  },
  // removedkey
  {
    "key": "ctrl+enter",
    "command": "-debug.openBreakpointToSide",
    "when": "breakpointsFocused"
  },
  // addedkey
  {
    "key": "meta+enter",
    "command": "debug.openBreakpointToSide",
    "when": "breakpointsFocused"
  },
  // removedkey
  {
    "key": "ctrl+f5",
    "command": "-debug.openView",
    "when": "!debuggersAvailable"
  },
  // addedkey
  {
    "key": "meta+f5",
    "command": "debug.openView",
    "when": "!debuggersAvailable"
  },
  // removedkey
  {
    "key": "delete",
    "command": "-debug.removeBreakpoint",
    "when": "breakpointsFocused && !breakpointInputFocused"
  },
  // addedkey
  {
    "key": "meta+backspace",
    "command": "debug.removeBreakpoint",
    "when": "breakpointsFocused && !breakpointInputFocused"
  },
  // removedkey
  {
    "key": "delete",
    "command": "-debug.removeWatchExpression",
    "when": "watchExpressionsFocused && !expressionSelected"
  },
  // addedkey
  {
    "key": "meta+backspace",
    "command": "debug.removeWatchExpression",
    "when": "watchExpressionsFocused && !expressionSelected"
  },
  // removedkey
  {
    "key": "ctrl+end",
    "command": "-interactive.scrollToBottom",
    "when": "resourceScheme == 'vscode-interactive'"
  },
  // addedkey
  {
    "key": "meta+down",
    "command": "interactive.scrollToBottom",
    "when": "resourceScheme == 'vscode-interactive'"
  },
  // removedkey
  {
    "key": "ctrl+home",
    "command": "-interactive.scrollToTop",
    "when": "resourceScheme == 'vscode-interactive'"
  },
  // addedkey
  {
    "key": "meta+up",
    "command": "interactive.scrollToTop",
    "when": "resourceScheme == 'vscode-interactive'"
  },
  // // removedkey
  // {
  //   "key": "ctrl+c",
  //   "command": "-keybindings.editor.copyKeybindingEntry",
  //   "when": "inKeybindings && keybindingFocus && !whenFocus"
  // },
  // // addedkey
  // {
  //   "key": "meta+c",
  //   "command": "keybindings.editor.copyKeybindingEntry",
  //   "when": "inKeybindings && keybindingFocus && !whenFocus"
  // },
  // removedkey
  {
    "key": "ctrl+down",
    "command": "-keybindings.editor.focusKeybindings",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  // addedkey
  {
    "key": "meta+down",
    "command": "keybindings.editor.focusKeybindings",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  // removedkey
  {
    "key": "alt+k",
    "command": "-keybindings.editor.recordSearchKeys",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  // addedkey
  {
    "key": "alt+meta+k",
    "command": "keybindings.editor.recordSearchKeys",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  // removedkey
  {
    "key": "delete",
    "command": "-keybindings.editor.removeKeybinding",
    "when": "inKeybindings && keybindingFocus && !inputFocus"
  },
  // addedkey
  {
    "key": "meta+backspace",
    "command": "keybindings.editor.removeKeybinding",
    "when": "inKeybindings && keybindingFocus && !inputFocus"
  },
  // removedkey
  {
    "key": "alt+p",
    "command": "-keybindings.editor.toggleSortByPrecedence",
    "when": "inKeybindings"
  },
  // addedkey
  {
    "key": "alt+meta+p",
    "command": "keybindings.editor.toggleSortByPrecedence",
    "when": "inKeybindings"
  },
  // addedkey
  {
    "key": "meta+up",
    "command": "list.collapse",
    "when": "listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus"
  },
  // addedkey
  {
    "key": "shift+meta+up",
    "command": "list.collapseAll",
    "when": "listFocus && !inputFocus"
  },
  // removedkey
  {
    "key": "ctrl+left",
    "command": "-list.collapseAll",
    "when": "listFocus && !inputFocus"
  },
  // addedkey
  {
    "key": "meta+left",
    "command": "list.collapseAll",
    "when": "listFocus && !inputFocus"
  },
  // addedkey
  {
    "key": "ctrl+n",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  // addedkey
  {
    "key": "ctrl+p",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  // removedkey
  {
    "key": "ctrl+down",
    "command": "-list.scrollDown",
    "when": "listFocus && !inputFocus"
  },
  // addedkey
  {
    "key": "meta+down",
    "command": "list.scrollDown",
    "when": "listFocus && !inputFocus"
  },
  // removedkey
  {
    "key": "ctrl+up",
    "command": "-list.scrollUp",
    "when": "listFocus && !inputFocus"
  },
  // addedkey
  {
    "key": "meta+up",
    "command": "list.scrollUp",
    "when": "listFocus && !inputFocus"
  },
  // addedkey
  {
    "key": "meta+down",
    "command": "list.select",
    "when": "listFocus && !inputFocus"
  },
  // removedkey
  {
    "key": "ctrl+a",
    "command": "-list.selectAll",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  // addedkey
  {
    "key": "meta+a",
    "command": "list.selectAll",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  // removedkey
  {
    "key": "ctrl+shift+enter",
    "command": "-list.toggleSelection",
    "when": "listFocus && !inputFocus"
  },
  // addedkey
  {
    "key": "shift+meta+enter",
    "command": "list.toggleSelection",
    "when": "listFocus && !inputFocus"
  },
  // addedkey
  {
    "key": "y",
    "command": "notebook.cell.changeToCode",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
  },
  // addedkey
  {
    "key": "m",
    "command": "notebook.cell.changeToMarkdown",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code'"
  },
  // removedkey
  {
    "key": "delete",
    "command": "-notebook.cell.delete",
    "when": "notebookEditorFocused && !inputFocus"
  },
  // addedkey
  {
    "key": "meta+backspace",
    "command": "notebook.cell.delete",
    "when": "notebookEditorFocused && !inputFocus"
  },
  // removedkey
  {
    "key": "ctrl+down",
    "command": "-notebook.cell.focusInOutput",
    "when": "notebookCellHasOutputs && notebookEditorFocused"
  },
  // addedkey
  {
    "key": "ctrl+meta+down",
    "command": "notebook.cell.focusInOutput",
    "when": "notebookCellHasOutputs && notebookEditorFocused"
  },
  // removedkey
  {
    "key": "ctrl+up",
    "command": "-notebook.cell.focusOutOutput",
    "when": "notebookEditorFocused"
  },
  // addedkey
  {
    "key": "ctrl+meta+up",
    "command": "notebook.cell.focusOutOutput",
    "when": "notebookEditorFocused"
  },
  // // removedkey
  // {
  //   "key": "ctrl+shift+enter",
  //   "command": "-notebook.cell.insertCodeCellAbove",
  //   "when": "notebookCellListFocused && !inputFocus"
  // },
  // // addedkey
  // {
  //   "key": "shift+meta+enter",
  //   "command": "notebook.cell.insertCodeCellAbove",
  //   "when": "notebookCellListFocused && !inputFocus"
  // },
  // removedkey
  // {
  //   "key": "ctrl+enter",
  //   "command": "-notebook.cell.insertCodeCellBelow",
  //   "when": "notebookCellListFocused && !inputFocus"
  // },
  // // addedkey
  // {
  //   "key": "meta+enter",
  //   "command": "notebook.cell.insertCodeCellBelow",
  //   "when": "notebookCellListFocused && !inputFocus"
  // },
  // removedkey
  {
    "key": "shift+alt+meta+j",
    "command": "-notebook.cell.joinAbove",
    "when": "notebookEditorFocused"
  },
  // addedkey
  {
    "key": "ctrl+shift+alt+j",
    "command": "notebook.cell.joinAbove",
    "when": "notebookEditorFocused"
  },
  // removedkey
  {
    "key": "alt+meta+j",
    "command": "-notebook.cell.joinBelow",
    "when": "notebookEditorFocused"
  },
  // addedkey
  {
    "key": "ctrl+alt+j",
    "command": "notebook.cell.joinBelow",
    "when": "notebookEditorFocused"
  },
  // removedkey
  {
    "key": "ctrl+l",
    "command": "-notebook.centerActiveCell",
    "when": "notebookEditorFocused"
  },
  // addedkey
  {
    "key": "meta+l",
    "command": "notebook.centerActiveCell",
    "when": "notebookEditorFocused"
  },
  // removedkey
  {
    "key": "ctrl+end",
    "command": "-notebook.focusBottom",
    "when": "notebookEditorFocused && !inputFocus"
  },
  // addedkey
  {
    "key": "cmd+down",
    "command": "notebook.focusBottom",
    "when": "notebookEditorFocused && !inputFocus"
  },
  // removedkey
  {
    "key": "ctrl+down",
    "command": "-notebook.focusNextEditor",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  // addedkey
  {
    "key": "ctrl+meta+down",
    "command": "notebook.focusNextEditor",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  // addedkey
  {
    "key": "up",
    "command": "notebook.focusPreviousEditor",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
  },
  // removedkey
  {
    "key": "ctrl+home",
    "command": "-notebook.focusTop",
    "when": "notebookEditorFocused && !inputFocus"
  },
  // addedkey
  {
    "key": "meta+up",
    "command": "notebook.focusTop",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "left",
    "command": "notebook.fold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  // removedkey
  {
    "key": "ctrl+shift+[",
    "command": "-notebook.fold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  // addedkey
  {
    "key": "alt+meta+[",
    "command": "notebook.fold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  // removedkey
  {
    "key": "ctrl+shift+i",
    "command": "-notebook.format",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  // addedkey
  {
    "key": "shift+alt+f",
    "command": "notebook.format",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  // removedkey
  {
    "key": "ctrl+shift+]",
    "command": "-notebook.unfold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  // addedkey
  {
    "key": "alt+meta+]",
    "command": "notebook.unfold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  // removedkey
  {
    "key": "delete",
    "command": "-notification.clear",
    "when": "notificationFocus"
  },
  // addedkey
  {
    "key": "meta+backspace",
    "command": "notification.clear",
    "when": "notificationFocus"
  },
  // // removedkey
  // {
  //   "key": "ctrl+c",
  //   "command": "-problems.action.copy",
  //   "when": "problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'"
  // },
  // // addedkey
  // {
  //   "key": "meta+c",
  //   "command": "problems.action.copy",
  //   "when": "problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'"
  // },
  // removedkey
  {
    "key": "ctrl+down",
    "command": "-problems.action.focusProblemsFromFilter",
    "when": "problemsFilterFocus"
  },
  // addedkey
  {
    "key": "meta+down",
    "command": "problems.action.focusProblemsFromFilter",
    "when": "problemsFilterFocus"
  },
  // addedkey
  {
    "key": "meta+down",
    "command": "problems.action.open",
    "when": "problemFocus"
  },
  // removedkey
  {
    "key": "meta+.",
    "command": "-problems.action.showQuickFixes",
    "when": "problemFocus"
  },
  // addedkey
  {
    "key": "ctrl+.",
    "command": "problems.action.showQuickFixes",
    "when": "problemFocus"
  },
  // removedkey
  {
    "key": "ctrl+alt+r",
    "command": "-revealFileInOS",
    "when": "!editorFocus"
  },
  // addedkey
  {
    "key": "alt+meta+r",
    "command": "revealFileInOS",
    "when": "!editorFocus"
  },
  // addedkey
  {
    "key": "alt+meta+s",
    "command": "saveAll"
  },
  // removedkey
  {
    "key": "ctrl+enter",
    "command": "-scm.acceptInput",
    "when": "scmRepository"
  },
  // addedkey
  {
    "key": "meta+enter",
    "command": "scm.acceptInput",
    "when": "scmRepository"
  },
  // // removedkey
  // {
  //   "key": "ctrl+c",
  //   "command": "-search.action.copyMatch",
  //   "when": "fileMatchOrMatchFocus"
  // },
  // // addedkey
  // {
  //   "key": "meta+c",
  //   "command": "search.action.copyMatch",
  //   "when": "fileMatchOrMatchFocus"
  // },
  // removedkey
  {
    "key": "ctrl+alt+c",
    "command": "-search.action.copyPath",
    "when": "fileMatchOrFolderMatchWithResourceFocus"
  },
  // addedkey
  {
    "key": "alt+meta+c",
    "command": "search.action.copyPath",
    "when": "fileMatchOrFolderMatchWithResourceFocus"
  },
  // removedkey
  {
    "key": "ctrl+up",
    "command": "-search.action.focusSearchFromResults",
    "when": "firstMatchFocus && searchViewletVisible"
  },
  // addedkey
  {
    "key": "meta+up",
    "command": "search.action.focusSearchFromResults",
    "when": "firstMatchFocus && searchViewletVisible"
  },
  // removedkey
  {
    "key": "alt+enter",
    "command": "-search.action.openInEditor",
    "when": "hasSearchResult && searchViewletFocus"
  },
  // addedkey
  {
    "key": "meta+enter",
    "command": "search.action.openInEditor",
    "when": "hasSearchResult && searchViewletFocus"
  },
  // addedkey
  {
    "key": "meta+down",
    "command": "search.action.openResult",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  // removedkey
  {
    "key": "delete",
    "command": "-search.action.remove",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  // addedkey
  {
    "key": "meta+backspace",
    "command": "search.action.remove",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  // removedkey
  {
    "key": "ctrl+shift+1",
    "command": "-search.action.replace",
    "when": "matchFocus && replaceActive && searchViewletVisible"
  },
  // addedkey
  {
    "key": "shift+meta+1",
    "command": "search.action.replace",
    "when": "matchFocus && replaceActive && searchViewletVisible"
  },
  // removedkey
  {
    "key": "ctrl+alt+enter",
    "command": "-search.action.replaceAll",
    "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
  },
  // addedkey
  {
    "key": "alt+meta+enter",
    "command": "search.action.replaceAll",
    "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
  },
  // removedkey
  {
    "key": "ctrl+shift+enter",
    "command": "-search.action.replaceAllInFile",
    "when": "fileMatchFocus && replaceActive && searchViewletVisible"
  },
  // addedkey
  {
    "key": "shift+meta+enter",
    "command": "search.action.replaceAllInFile",
    "when": "fileMatchFocus && replaceActive && searchViewletVisible"
  },
  // removedkey
  {
    "key": "ctrl+shift+1",
    "command": "-search.action.replaceAllInFile",
    "when": "fileMatchFocus && replaceActive && searchViewletVisible"
  },
  // addedkey
  {
    "key": "shift+meta+1",
    "command": "search.action.replaceAllInFile",
    "when": "fileMatchFocus && replaceActive && searchViewletVisible"
  },
  // removedkey
  {
    "key": "ctrl+shift+enter",
    "command": "-search.action.replaceAllInFolder",
    "when": "folderMatchFocus && replaceActive && searchViewletVisible"
  },
  // addedkey
  {
    "key": "shift+meta+enter",
    "command": "search.action.replaceAllInFolder",
    "when": "folderMatchFocus && replaceActive && searchViewletVisible"
  },
  // removedkey
  {
    "key": "ctrl+shift+1",
    "command": "-search.action.replaceAllInFolder",
    "when": "folderMatchFocus && replaceActive && searchViewletVisible"
  },
  // addedkey
  {
    "key": "shift+meta+1",
    "command": "search.action.replaceAllInFolder",
    "when": "folderMatchFocus && replaceActive && searchViewletVisible"
  },
  // removedkey
  {
    "key": "ctrl+down",
    "command": "-search.focus.nextInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  // addedkey
  {
    "key": "meta+down",
    "command": "search.focus.nextInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  // removedkey
  {
    "key": "ctrl+up",
    "command": "-search.focus.previousInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  // addedkey
  {
    "key": "meta+up",
    "command": "search.focus.previousInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  // removedkey
  {
    "key": "ctrl+shift+l",
    "command": "-selectAllSearchEditorMatches",
    "when": "inSearchEditor"
  },
  // addedkey
  {
    "key": "shift+meta+l",
    "command": "selectAllSearchEditorMatches",
    "when": "inSearchEditor"
  },
  // removedkey
  {
    "key": "ctrl+; ctrl+x",
    "command": "-testing.cancelRun"
  },
  // addedkey
  {
    "key": "meta+; meta+x",
    "command": "testing.cancelRun"
  },
  // removedkey
  {
    "key": "ctrl+; ctrl+a",
    "command": "-testing.debugAll"
  },
  // addedkey
  {
    "key": "meta+; meta+a",
    "command": "testing.debugAll"
  },
  // removedkey
  {
    "key": "ctrl+; ctrl+c",
    "command": "-testing.debugAtCursor",
    "when": "editorTextFocus"
  },
  // addedkey
  {
    "key": "meta+; meta+c",
    "command": "testing.debugAtCursor",
    "when": "editorTextFocus"
  },
  // removedkey
  {
    "key": "ctrl+; ctrl+e",
    "command": "-testing.debugFailTests"
  },
  // addedkey
  {
    "key": "meta+; meta+e",
    "command": "testing.debugFailTests"
  },
  // removedkey
  {
    "key": "ctrl+; ctrl+l",
    "command": "-testing.debugLastRun"
  },
  // addedkey
  {
    "key": "meta+; meta+l",
    "command": "testing.debugLastRun"
  },
  // removedkey
  {
    "key": "ctrl+; ctrl+m",
    "command": "-testing.openOutputPeek"
  },
  {
    "key": "meta+; meta+m",
    "command": "testing.openOutputPeek"
  },
  // removedkey
  {
    "key": "ctrl+; e",
    "command": "-testing.reRunFailTests"
  },
  // addedkey
  {
    "key": "meta+; e",
    "command": "testing.reRunFailTests"
  },
  // removedkey
  {
    "key": "ctrl+; l",
    "command": "-testing.reRunLastRun"
  },
  // addedkey
  {
    "key": "meta+; l",
    "command": "testing.reRunLastRun"
  },
  // removedkey
  {
    "key": "ctrl+; ctrl+r",
    "command": "-testing.refreshTests",
    "when": "testing.canRefresh"
  },
  // addedkey
  {
    "key": "meta+; meta+r",
    "command": "testing.refreshTests",
    "when": "testing.canRefresh"
  },
  // removedkey
  {
    "key": "ctrl+; a",
    "command": "-testing.runAll"
  },
  // addedkey
  {
    "key": "meta+; a",
    "command": "testing.runAll"
  },
  // removedkey
  {
    "key": "ctrl+; c",
    "command": "-testing.runAtCursor",
    "when": "editorTextFocus"
  },
  // addedkey
  {
    "key": "meta+; c",
    "command": "testing.runAtCursor",
    "when": "editorTextFocus"
  },
  // removedkey
  {
    "key": "ctrl+; f",
    "command": "-testing.runCurrentFile",
    "when": "editorTextFocus"
  },
  // addedkey
  {
    "key": "meta+; f",
    "command": "testing.runCurrentFile",
    "when": "editorTextFocus"
  },
  // removedkey
  {
    "key": "ctrl+; ctrl+o",
    "command": "-testing.showMostRecentOutput",
    "when": "testing.hasAnyResults"
  },
  // addedkey
  {
    "key": "meta+; meta+o",
    "command": "testing.showMostRecentOutput",
    "when": "testing.hasAnyResults"
  },
  // removedkey
  {
    "key": "ctrl+; ctrl+i",
    "command": "-testing.toggleInlineTestOutput"
  },
  // addedkey
  {
    "key": "meta+; meta+i",
    "command": "testing.toggleInlineTestOutput"
  },
  // removedkey
  {
    "key": "alt+h",
    "command": "-testing.toggleTestingPeekHistory",
    "when": "testing.isPeekVisible"
  },
  // addedkey
  {
    "key": "alt+meta+h",
    "command": "testing.toggleTestingPeekHistory",
    "when": "testing.isPeekVisible"
  },
  // removedkey
  {
    "key": "alt+c",
    "command": "-toggleSearchCaseSensitive",
    "when": "searchViewletFocus"
  },
  // addedkey
  {
    "key": "alt+meta+c",
    "command": "toggleSearchCaseSensitive",
    "when": "searchViewletFocus"
  },
  // removedkey
  {
    "key": "alt+c",
    "command": "-toggleSearchEditorCaseSensitive",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  // addedkey
  {
    "key": "alt+meta+c",
    "command": "toggleSearchEditorCaseSensitive",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  // removedkey
  {
    "key": "alt+l",
    "command": "-toggleSearchEditorContextLines",
    "when": "inSearchEditor"
  },
  // addedkey
  {
    "key": "alt+meta+l",
    "command": "toggleSearchEditorContextLines",
    "when": "inSearchEditor"
  },
  // removedkey
  {
    "key": "alt+r",
    "command": "-toggleSearchEditorRegex",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  // addedkey
  {
    "key": "alt+meta+r",
    "command": "toggleSearchEditorRegex",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  // removedkey
  {
    "key": "alt+w",
    "command": "-toggleSearchEditorWholeWord",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  // addedkey
  {
    "key": "alt+meta+w",
    "command": "toggleSearchEditorWholeWord",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  // removedkey
  {
    "key": "alt+p",
    "command": "-toggleSearchPreserveCase",
    "when": "searchViewletFocus"
  },
  // addedkey
  {
    "key": "alt+meta+p",
    "command": "toggleSearchPreserveCase",
    "when": "searchViewletFocus"
  },
  // removedkey
  {
    "key": "alt+r",
    "command": "-toggleSearchRegex",
    "when": "searchViewletFocus"
  },
  // addedkey
  {
    "key": "alt+meta+r",
    "command": "toggleSearchRegex",
    "when": "searchViewletFocus"
  },
  // removedkey
  {
    "key": "alt+w",
    "command": "-toggleSearchWholeWord",
    "when": "searchViewletFocus"
  },
  // addedkey
  {
    "key": "alt+meta+w",
    "command": "toggleSearchWholeWord",
    "when": "searchViewletFocus"
  },
  {
    "key": "alt+meta+t",
    "command": "workbench.action.closeOtherEditors"
  },
  // removedkey
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  // addedkey
  {
    "key": "shift+meta+w",
    "command": "workbench.action.closeWindow"
  },
  // removedkey
  {
    "key": "alt+f4",
    "command": "-workbench.action.closeWindow"
  },
  // addedkey
  {
    "key": "meta+w",
    "command": "workbench.action.closeWindow",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  // removedkey
  {
    "key": "ctrl+k ctrl+o",
    "command": "-workbench.action.files.openFolder",
    "when": "openFolderWorkspaceSupport"
  },
  // removedkey
  {
    "key": "ctrl+shift+pageup",
    "command": "-workbench.action.moveEditorLeftInGroup"
  },
  // addedkey
  {
    "key": "shift+meta+pageup",
    "command": "workbench.action.moveEditorLeftInGroup"
  },
  // removedkey
  {
    "key": "ctrl+shift+pagedown",
    "command": "-workbench.action.moveEditorRightInGroup"
  },
  // addedkey
  {
    "key": "shift+meta+pagedown",
    "command": "workbench.action.moveEditorRightInGroup"
  },
  // removedkey
  {
    "key": "shift+alt+1",
    "command": "-workbench.action.moveEditorToFirstGroup"
  },
  // addedkey
  {
    "key": "ctrl+meta+1",
    "command": "workbench.action.moveEditorToFirstGroup"
  },
  // removedkey
  {
    "key": "shift+alt+9",
    "command": "-workbench.action.moveEditorToLastGroup"
  },
  // addedkey
  {
    "key": "ctrl+meta+9",
    "command": "workbench.action.moveEditorToLastGroup"
  },
  // removedkey
  {
    "key": "ctrl+alt+right",
    "command": "-workbench.action.moveEditorToNextGroup"
  },
  // addedkey
  {
    "key": "ctrl+meta+right",
    "command": "workbench.action.moveEditorToNextGroup"
  },
  // removedkey
  {
    "key": "ctrl+alt+left",
    "command": "-workbench.action.moveEditorToPreviousGroup"
  },
  // addedkey
  {
    "key": "ctrl+meta+left",
    "command": "workbench.action.moveEditorToPreviousGroup"
  },
  // removedkey
  {
    "key": "ctrl+alt+-",
    "command": "-workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  // addedkey
  {
    "key": "ctrl+-",
    "command": "workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  // removedkey
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.nextEditor"
  },
  // addedcustomkey
  {
    "key": "ctrl+shift+]",
    "command": "workbench.action.nextEditor"
  },
  // removedkey
  {
    "key": "ctrl+k ctrl+h",
    "command": "-workbench.action.output.toggleOutput",
    "when": "workbench.panel.output.active"
  },
  // addedkey
  {
    "key": "shift+meta+u",
    "command": "workbench.action.output.toggleOutput",
    "when": "workbench.panel.output.active"
  },
  // removedkey
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.previousEditor"
  },
  // addedcustomkey
  {
    "key": "ctrl+shift+[",
    "command": "workbench.action.previousEditor"
  },
  // removedkey
  {
    "key": "ctrl+k ctrl+pageup",
    "command": "workbench.action.previousEditorInGroup"
  },
  // addedcustomkey
  {
    "key": "ctrl+k ctrl+alt+left",
    "command": "workbench.action.previousEditorInGroup"
  },
  // removedkey
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  // removedkey
  // {
  //   "key": "ctrl+p",
  //   "command": "-workbench.action.quickOpen"
  // },
  // addedkey
  {
    "key": "meta+p",
    "command": "workbench.action.quickOpen"
  },
  // removedkey
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quit"
  },
  // addedkey
  {
    "key": "ctrl+q",
    "command": "workbench.action.quickOpenView"
  },
  // addedkey revisit
  {
    "key": "meta+q",
    "command": "workbench.action.quit"
  },
  // removedkey
  {
    "key": "ctrl+k ctrl+p",
    "command": "-workbench.action.showAllEditors"
  },
  // addedcustomkey
  {
    "key": "ctrl+alt+tab",
    "command": "workbench.action.showAllEditors"
  },
  // removedkey
  {
    "key": "ctrl+\\",
    "command": "-workbench.action.splitEditor"
  },
  // addedkey
  {
    "key": "meta+\\",
    "command": "workbench.action.splitEditor"
  },
  // removedkey
  {
    "key": "ctrl+shift+b",
    "command": "-workbench.action.tasks.build",
    "when": "taskCommandsRegistered"
  },
  // addedkey
  {
    "key": "shift+meta+b",
    "command": "workbench.action.tasks.build",
    "when": "taskCommandsRegistered"
  },
  {
    "key": "ctrl+numpad_add",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "ctrl+shift+=",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "ctrl+=",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "ctrl+numpad_subtract",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "ctrl+-",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "ctrl+numpad0",
    "command": "-workbench.action.zoomReset"
  },
  {
    "key": "ctrl+alt+meta+i",
    "command": "editor.action.inspectTMScopes",
    "when": "editorFocus"
  },
  // removedkey
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  // addedcustomkey
  {
    "key": "ctrl+shift+[",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  // removedkey
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  // addedcustomkey
  {
    "key": "ctrl+shift+]",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  // removedkey
  {
    "key": "alt+down",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // addedkey
  {
    "key": "alt+meta+down",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // removedkey
  {
    "key": "alt+right",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // addedkey
  {
    "key": "alt+meta+right",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // removedkey
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.copySelection",
    "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  // addedkey
  {
    "key": "meta+c",
    "command": "workbench.action.terminal.copySelection",
    "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  // removedkey
  {
    "key": "ctrl+shift+v",
    "command": "-workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // addedkey
  {
    "key": "meta+v",
    "command": "workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+insert",
    "command": "workbench.action.terminal.pasteSelection",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // removedkey
  {
    "key": "enter",
    "command": "-explorer.openAndPassFocus",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
  },
  // removedkey
  {
    "key": "ctrl+enter",
    "command": "-explorer.openToSide",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  // addedkey
  {
    "key": "enter",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+alt+enter",
    "command": "language-julia.executeCodeBlockOrSelection",
    "when": "editorTextFocus && activeEditor != 'workbench.editor.notebook' && editorLangId in 'julia.supportedLanguageIds'"
  },
  {
    "key": "ctrl+enter",
    "command": "-language-julia.executeCodeBlockOrSelection",
    "when": "editorTextFocus && activeEditor != 'workbench.editor.notebook' && editorLangId in 'julia.supportedLanguageIds'"
  }
]
